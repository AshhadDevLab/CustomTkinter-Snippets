{
  "CTkButton from the customtkinter module": {
    "prefix": "ctkbutton",
    "body": [
      "def button_event():",
      "    print('button pressed')",
      "",
      "${1:button} = customtkinter.CTkButton(${2:app}, text='CTkButton', width=140, height=28)"
      "${1:button}.place(x=10, y=10)"
    ],
    "description": "Inserts a button widget snippet"
  },
  "CTkButton from the customtkinter module with grid placement": {
    "prefix": "ctkbutton.grid",
    "body": [
      "def button_event():",
      "    print('button pressed')",
      "",
      "${1:button} = customtkinter.CTkButton(${2:app}, text='CTkButton', width=140, height=28)"
      "${1:button}.grid(column=0, row=0)"
    ],
    "description": "Inserts a button widget snippet"
  },
  "CTkButton from the customtkinter module with pack placement": {
    "prefix": "ctkbutton.pack",
    "body": [
      "def button_event():",
      "    print('button pressed')",
      "",
      "${1:button} = customtkinter.CTkButton(${2:app}, text='CTkButton', width=140, height=28)"
      "${1:button}.pack()"
    ],
    "description": "Inserts a button widget snippet"
  },
  "CTkCheckBox from the customtkinter module": {
    "prefix": "ctkcheckbox",
    "body": [
      "def checkbox_event():",
      "    print('checkbox toggled, current value:', check_var.get())",
      "",
      "check_var = customtkinter.StringVar(value='on')",
      "${1:checkbox} = customtkinter.CTkCheckBox(${2:app}, text='CTkCheckBox', command=checkbox_event,",
      "                                     width=100, height=24, checkbox_width=24, checkbox_height=24,",
      "                                     variable=check_var, onvalue='on', offvalue='off')"
      "${1:checkbox}.place(x=10, y=10)"
    ],
    "description": "Inserts a checkbox widget snippet"
  },
  
  "CTkCheckBox from the customtkinter module with grid placement": {
    "prefix": "ctkcheckbox.grid",
    "body": [
      "def checkbox_event():",
      "    print('checkbox toggled, current value:', check_var.get())",
      "",
      "check_var = customtkinter.StringVar(value='on')",
      "${1:checkbox} = customtkinter.CTkCheckBox(${2:app}, text='CTkCheckBox', command=checkbox_event,",
      "                                     width=100, height=24, checkbox_width=24, checkbox_height=24,",
      "                                     variable=check_var, onvalue='on', offvalue='off')"
      "${1:checkbox}.grid(column=0, row=0)"
    ],
    "description": "Inserts a checkbox widget snippet"
  },
  
  "CTkCheckBox from the customtkinter module with pack placement": {
    "prefix": "ctkcheckbox.pack",
    "body": [
      "def checkbox_event():",
      "    print('checkbox toggled, current value:', check_var.get())",
      "",
      "check_var = customtkinter.StringVar(value='on')",
      "${1:checkbox} = customtkinter.CTkCheckBox(${2:app}, text='CTkCheckBox', command=checkbox_event,",
      "                                     width=100, height=24, checkbox_width=24, checkbox_height=24,",
      "                                     variable=check_var, onvalue='on', offvalue='off')"
      "${1:checkbox}.pack()"
    ],
    "description": "Inserts a checkbox widget snippet"
  },
  "CTkComboBox from the customtkinter module": {
    "prefix": "ctkcombobox",
    "body": [
      "def combobox_callback(choice):",
      "    print('combobox dropdown clicked:', choice)",
      "",
      "combobox_var = customtkinter.StringVar(value='option 2')",
      "${1:combobox} = customtkinter.CTkComboBox(${2:app}, values=['option 1', 'option 2'],",
      "                                     width=140, height=28",
      "                                     command=combobox_callback, variable=combobox_var)",
      "combobox_var.set('option 2')",
      "${1:combobox}.place(x=10, y=10)"
    ],
    "description": "Inserts a combo box widget snippet"
  },
  "CTkComboBox from the customtkinter module with grid placement": {
    "prefix": "ctkcombobox.grid",
    "body": [
      "def combobox_callback(choice):",
      "    print('combobox dropdown clicked:', choice)",
      "",
      "combobox_var = customtkinter.StringVar(value='option 2')",
      "${1:combobox} = customtkinter.CTkComboBox(${2:app}, values=['option 1', 'option 2'],",
      "                                     width=140, height=28",
      "                                     command=combobox_callback, variable=combobox_var)",
      "combobox_var.set('option 2')",
      "${1:combobox}.grid(column=0, row=0)"
    ],
    "description": "Inserts a combo box widget snippet"
  },
  "CTkComboBox from the customtkinter module with pack placement": {
    "prefix": "ctkcombobox.pack",
    "body": [
      "def combobox_callback(choice):",
      "    print('combobox dropdown clicked:', choice)",
      "",
      "combobox_var = customtkinter.StringVar(value='option 2')",
      "${1:combobox} = customtkinter.CTkComboBox(${2:app}, values=['option 1', 'option 2'],",
      "                                     width=140, height=28",
      "                                     command=combobox_callback, variable=combobox_var)",
      "combobox_var.set('option 2')",
      "${1:combobox}.pack()"
    ],
    "description": "Inserts a combo box widget snippet"
  },
  "CTkEntry from the customtkinter module": {
    "prefix": "ctkentry",
    "body": [
      "${1:entry} = customtkinter.CTkEntry(${2:app}, placeholder_text='CTkEntry', width=140, height=28)",
      "${1:entry}.place(x=10, y=10)"
    ],
    "description": "Inserts an entry field widget snippet"
  },
  "CTkEntry from the customtkinter module with grid placement": {
    "prefix": "ctkentry.grid",
    "body": [
      "${1:entry} = customtkinter.CTkEntry(${2:app}, placeholder_text='CTkEntry', width=140, height=28)",
      "${1:entry}.grid(column=0, row=0)"
    ],
    "description": "Inserts an entry field widget snippet"
  },
  "CTkEntry from the customtkinter module with pack placement": {
    "prefix": "ctkentry.pack",
    "body": [
      "${1:entry} = customtkinter.CTkEntry(${2:app}, placeholder_text='CTkEntry', width=140, height=28)",
      "${1:entry}.pack()"
    ],
    "description": "Inserts an entry field widget snippet"
  },
  "CTkFrame from the customtkinter module": {
    "prefix": "ctkframe",
    "body": [
      "${1:frame} = customtkinter.CTkFrame(${2:app}, width=200, height=200)",
      "${1:frame}.place(x=10, y=10)"
    ],
    "description": "Inserts a frame widget snippet"
  },
  "CTkFrame from the customtkinter module with grid placement": {
    "prefix": "ctkframe.grid",
    "body": [
      "${1:frame} = customtkinter.CTkFrame(${2:app}, width=200, height=200)",
      "${1:frame}.grid(column=0, row=0)"
    ],
    "description": "Inserts a frame widget snippet"
  },
  "CTkFrame from the customtkinter module with pack placement": {
    "prefix": "ctkframe.pack",
    "body": [
      "${1:frame} = customtkinter.CTkFrame(${2:app}, width=200, height=200)",
      "${1:frame}.pack()"
    ],
    "description": "Inserts a frame widget snippet"
  },
  "CTkLabel from the customtkinter module": {
    "prefix": "ctklabel",
    "body": [
      "${1:label} = customtkinter.CTkLabel(${2:app}, text='CTkLabel', width=40, height=28, fg_color='transparent')",
      "${1:label}.place(x=10, y=10)"
    ],
    "description": "Inserts a label widget snippet"
  },
  "CTkLabel from the customtkinter module with grid placement": {
    "prefix": "ctklabel.grid",
    "body": [
      "${1:label} = customtkinter.CTkLabel(${2:app}, text='CTkLabel', width=40, height=28, fg_color='transparent')",
      "${1:label}.grid(column=0 ,row=0)"
    ],
    "description": "Inserts a label widget snippet"
  },
  "CTkLabel from the customtkinter module with pack placement": {
    "prefix": "ctklabel.pack",
    "body": [
      "${1:label} = customtkinter.CTkLabel(${2:app}, text='CTkLabel', width=40, height=28, fg_color='transparent')",
      "${1:label}.pack()"
    ],
    "description": "Inserts a label widget snippet"
  },
  "CTkOptionMenu from the customtkinter module": {
    "prefix": "ctkoptionmenu",
    "body": [
      "def optionmenu_callback(choice):",
      "    print('optionmenu dropdown clicked:', choice)",
      "",
      "optionmenu_var = customtkinter.StringVar(value='option 2')",
      "${1:optionmenu} = customtkinter.CTkOptionMenu(${2:app},values=['option 1', 'option 2'],",
      "                                         width=140, height=28",
      "                                         command=optionmenu_callback,",
      "                                         variable=optionmenu_var)",
      "${1:optionmenu}.place(x=10, y=10)"
    ],
    "description": "Inserts an option menu widget snippet"
  },
  "CTkOptionMenu from the customtkinter module with grid placement": {
    "prefix": "ctkoptionmenu.grid",
    "body": [
      "def optionmenu_callback(choice):",
      "    print('optionmenu dropdown clicked:', choice)",
      "",
      "optionmenu_var = customtkinter.StringVar(value='option 2')",
      "${1:optionmenu} = customtkinter.CTkOptionMenu(${2:app},values=['option 1', 'option 2'],",
      "                                         width=140, height=28",
      "                                         command=optionmenu_callback,",
      "                                         variable=optionmenu_var)",
      "${1:optionmenu}.grid(column=0, row=0)"
    ],
    "description": "Inserts an option menu widget snippet"
  },
  "CTkOptionMenu from the customtkinter module with pack placement": {
    "prefix": "ctkoptionmenu.pack",
    "body": [
      "def optionmenu_callback(choice):",
      "    print('optionmenu dropdown clicked:', choice)",
      "",
      "optionmenu_var = customtkinter.StringVar(value='option 2')",
      "${1:optionmenu} = customtkinter.CTkOptionMenu(${2:app},values=['option 1', 'option 2'],",
      "                                         width=140, height=28",
      "                                         command=optionmenu_callback,",
      "                                         variable=optionmenu_var)",
      "${1:optionmenu}.pack()"
    ],
    "description": "Inserts an option menu widget snippet"
  },
  "CTkProgressBar from the customtkinter module": {
    "prefix": "ctkprogressbar",
    "body": [
      "${1:progressbar} = customtkinter.CTkProgressBar(${2:app}, orientation='horizontal')",
      "${1:progressbar}.place(x=10, y=10)"
    ],
    "description": "Inserts a progress bar widget snippet"
  },
  "CTkProgressBar from the customtkinter module with grid placement": {
    "prefix": "ctkprogressbar.grid",
    "body": [
      "${1:progressbar} = customtkinter.CTkProgressBar(${2:app}, orientation='horizontal')",
      "${1:progressbar}.grid(column=0, row=0)"
    ],
    "description": "Inserts a progress bar widget snippet"
  },
  "CTkProgressBar from the customtkinter module with pack placement": {
    "prefix": "ctkprogressbar.pack",
    "body": [
      "${1:progressbar} = customtkinter.CTkProgressBar(${2:app}, orientation='horizontal')",
      "${1:progressbar}.pack()"
    ],
    "description": "Inserts a progress bar widget snippet"
  },
  "CTkRadioButton from the customtkinter module": {
    "prefix": "ctkradiobutton",
    "body": [
      "def radiobutton_event():",
      "    print('radiobutton toggled, current value:', radio_var.get())",
      "",
      "radio_var = tkinter.IntVar(value=0)",
      "${1:radiobutton}= customtkinter.CTkRadioButton(${2:app}, text='CTkRadioButton 1',",
      "                                             width=100 , height=22 , radiobutton_width=22, radiobutton_height=22",
      "                                             command=radiobutton_event, variable= radio_var, value=1)",
      "",
      "${1:radiobutton}.place(x=10, y=10)"
    ],
    "description": "Inserts a radio button widget snippet"
  },
  "CTkRadioButton from the customtkinter module with grid placement": {
    "prefix": "ctkradiobutton.grid",
    "body": [
      "def radiobutton_event():",
      "    print('radiobutton toggled, current value:', radio_var.get())",
      "",
      "radio_var = tkinter.IntVar(value=0)",
      "${1:radiobutton}= customtkinter.CTkRadioButton(${2:app}, text='CTkRadioButton 1',",
      "                                             width=100 , height=22 , radiobutton_width=22, radiobutton_height=22",
      "                                             command=radiobutton_event, variable= radio_var, value=1)",
      "",
      "${1:radiobutton}.grid(column=0, row=0)"
    ],
    "description": "Inserts a radio button widget snippet"
  },
  "CTkRadioButton from the customtkinter module with pack placement": {
    "prefix": "ctkradiobutton.pack",
    "body": [
      "def radiobutton_event():",
      "    print('radiobutton toggled, current value:', radio_var.get())",
      "",
      "radio_var = tkinter.IntVar(value=0)",
      "${1:radiobutton}= customtkinter.CTkRadioButton(${2:app}, text='CTkRadioButton 1',",
      "                                             width=100 , height=22 , radiobutton_width=22, radiobutton_height=22",
      "                                             command=radiobutton_event, variable= radio_var, value=1)",
      "",
      "${1:radiobutton}.pack()"
    ],
    "description": "Inserts a radio button widget snippet"
  },
  "CTkScrollableFrame from the customtkinter module": {
    "prefix": "ctkscrollableframe",
    "body": [
      "${1:scrollable_frame} = customtkinter.CTkScrollableFrame(${2:app}, width=200, height=200)",
      "",
      "${1:scrollable_frame}.place(x=10, y=10)"
    ],
    "description": "Inserts a scrollable frame widget snippet"
  },
  "CTkScrollableFrame from the customtkinter module with grid placement": {
    "prefix": "ctkscrollableframe.grid",
    "body": [
      "${1:scrollable_frame} = customtkinter.CTkScrollableFrame(${2:app}, width=200, height=200)",
      "",
      "${1:scrollable_frame}.grid(column=0, row=0)"
    ],
    "description": "Inserts a scrollable frame widget snippet"
  },
  "CTkScrollableFrame from the customtkinter module with pack placement": {
    "prefix": "ctkscrollableframe.pack",
    "body": [
      "${1:scrollable_frame} = customtkinter.CTkScrollableFrame(${2:app}, width=200, height=200)",
      "",
      "${1:scrollable_frame}.pack()"
    ],
    "description": "Inserts a scrollable frame widget snippet"
  },
  "CTkSegmentedButton from the customtkinter module": {
    "prefix": "ctksegmentedbutton",
    "body": [
      "def segmented_button_callback(value):",
      "    print('segmented button clicked:', value)",
      "",
      "segmented_button_var = customtkinter.StringVar(value='Value 1')",
      "${1:segmented_button} = customtkinter.CTkSegmentedButton(${2:app}, values=['Value 1', 'Value 2', 'Value 3'],",
      "                                                     width=140, height=28",
      "                                                     command=segmented_button_callback,",
      "                                                     variable=segmented_button_var)",
      "",
      "${1:segmented_button}.place(x=10, y=10)"
    ],
    "description": "Inserts a segmented button widget snippet"
  },
  "CTkSegmentedButton from the customtkinter module with grid placement": {
    "prefix": "ctksegmentedbutton.grid",
    "body": [
      "def segmented_button_callback(value):",
      "    print('segmented button clicked:', value)",
      "",
      "segmented_button_var = customtkinter.StringVar(value='Value 1')",
      "${1:segmented_button} = customtkinter.CTkSegmentedButton(${2:app}, values=['Value 1', 'Value 2', 'Value 3'],",
      "                                                     width=140, height=28",
      "                                                     command=segmented_button_callback,",
      "                                                     variable=segmented_button_var)",
      "",
      "${1:segmented_button}.grid(column=0, row=0)"
    ],
    "description": "Inserts a segmented button widget snippet"
  },
  "CTkSegmentedButton from the customtkinter module with pack placement": {
    "prefix": "ctksegmentedbutton.pack",
    "body": [
      "def segmented_button_callback(value):",
      "    print('segmented button clicked:', value)",
      "",
      "segmented_button_var = customtkinter.StringVar(value='Value 1')",
      "${1:segmented_button} = customtkinter.CTkSegmentedButton(${2:app}, values=['Value 1', 'Value 2', 'Value 3'],",
      "                                                     width=140, height=28",
      "                                                     command=segmented_button_callback,",
      "                                                     variable=segmented_button_var)",
      "",
      "${1:segmented_button}.pack()"
    ],
    "description": "Inserts a segmented button widget snippet"
  },
  "CTkSlider from the customtkinter module": {
    "prefix": "ctkslider",
    "body": [
      "def slider_event(value):",
      "    print(value)",
      "",
      "${1:slider} = customtkinter.CTkSlider(${2:app}, width=140, height=28, from_=0, to=100, command=slider_event)",
      "",
      "${1:slider}.place(x=10, y=10)"
    ],
    "description": "Inserts a slider widget snippet"
  },
  "CTkSlider from the customtkinter module with grid placement": {
    "prefix": "ctkslider.grid",
    "body": [
      "def slider_event(value):",
      "    print(value)",
      "",
      "${1:slider} = customtkinter.CTkSlider(${2:app}, width=140, height=28, from_=0, to=100, command=slider_event)",
      "",
      "${1:slider}.grid(column=0, row=0)"
    ],
    "description": "Inserts a slider widget snippet"
  },
  "CTkSlider from the customtkinter module with pack placement": {
    "prefix": "ctkslider.pack",
    "body": [
      "def slider_event(value):",
      "    print(value)",
      "",
      "${1:slider} = customtkinter.CTkSlider(${2:app}, width=140, height=28, from_=0, to=100, command=slider_event)",
      "",
      "${1:slider}.pack()"
    ],
    "description": "Inserts a slider widget snippet"
  },
  "CTkSwitch from the customtkinter module": {
    "prefix": "ctkswitch",
    "body": [
      "def switch_event():",
      "    print('switch toggled, current value:', switch_var.get())",
      "",
      "switch_var = customtkinter.StringVar(value='on')",
      "${1:switch} = customtkinter.CTkSwitch(${2:app}, text='CTkSwitch', command=switch_event,",
      "                                 width=100, height=24, switch_width=36, switch_height=18",
      "                                 variable=switch_var, onvalue='on', offvalue='off')",
      "",
      "${1:switch}.place(x=10, y=10)"
    ],
    "description": "Inserts a switch widget snippet"
  },
  "CTkSwitch from the customtkinter module  with grid placement": {
    "prefix": "ctkswitch.grid",
    "body": [
      "def switch_event():",
      "    print('switch toggled, current value:', switch_var.get())",
      "",
      "switch_var = customtkinter.StringVar(value='on')",
      "${1:switch} = customtkinter.CTkSwitch(${2:app}, text='CTkSwitch', command=switch_event,",
      "                                 width=100, height=24, switch_width=36, switch_height=18",
      "                                 variable=switch_var, onvalue='on', offvalue='off')",
      "",
      "${1:switch}.grid(column=0, row=0)"
    ],
    "description": "Inserts a switch widget snippet"
  },
  "CTkSwitch from the customtkinter module with pack placement": {
    "prefix": "ctkswitch.pack",
    "body": [
      "def switch_event():",
      "    print('switch toggled, current value:', switch_var.get())",
      "",
      "switch_var = customtkinter.StringVar(value='on')",
      "${1:switch} = customtkinter.CTkSwitch(${2:app}, text='CTkSwitch', command=switch_event,",
      "                                 width=100, height=24, switch_width=36, switch_height=18",
      "                                 variable=switch_var, onvalue='on', offvalue='off')",
      "",
      "${1:switch}.pack()"
    ],
    "description": "Inserts a switch widget snippet"
  },
  "CTkTabview from the customtkinter module": {
    "prefix": "ctktabview",
    "body": [
      "${1:tabview} = customtkinter.CTkTabview(${3:app})",
      "${1:tabview}.place(x=10, y=10)",
      "",
      "${1:tabview}.add('tab 1')  # add tab at the end",
      "${1:tabview}.add('tab 2')  # add tab at the end",
      "${1:tabview}.set('tab 2')  # set currently visible tab",
      "",
      "${2:button} = customtkinter.CTkButton(master=${1:tabview}.tab('tab 1'))",
      "${2:button}.place(x=10, y=10)"
    ],
    "description": "Inserts a tab view widget snippet"
  },
  "CTkTabview from the customtkinter module with grid placement": {
    "prefix": "ctktabview.grid",
    "body": [
      "${1:tabview} = customtkinter.CTkTabview(${3:app})",
      "${1:tabview}.grid(column=0, row=20)",
      "",
      "${1:tabview}.add('tab 1')  # add tab at the end",
      "${1:tabview}.add('tab 2')  # add tab at the end",
      "${1:tabview}.set('tab 2')  # set currently visible tab",
      "",
      "${2:button} = customtkinter.CTkButton(master=${1:tabview}.tab('tab 1'))",
      "${2:button}.grid(column=0, row=1)"
    ],
    "description": "Inserts a tab view widget snippet"
  },
  "CTkTabview from the customtkinter module with pack placement": {
    "prefix": "ctktabview.pack",
    "body": [
      "${1:tabview} = customtkinter.CTkTabview(${3:app})",
      "${1:tabview}.pack(padx=20, pady=20)",
      "",
      "${1:tabview}.add('tab 1')  # add tab at the end",
      "${1:tabview}.add('tab 2')  # add tab at the end",
      "${1:tabview}.set('tab 2')  # set currently visible tab",
      "",
      "${2:button} = customtkinter.CTkButton(master=${1:tabview}.tab('tab 1'))",
      "${2:button}.pack(padx=20, pady=20)"
    ],
    "description": "Inserts a tab view widget snippet"
  },
  "CTkTextbox from the customtkinter module": {
    "prefix": "ctktextbox",
    "body": [
      "${1:textbox} = customtkinter.CTkTextbox(${2:app}, width=200, height=200)",
      "",
      "${1:textbox}.place(x=10, y=10)",
      "",
      "textbox.insert('0.0', 'new text to insert')  # insert at line 0 character 0",
      "text = ${1:textbox}.get('0.0', 'end')  # get text from line 0 character 0 till the end",
      "${1:textbox}.delete('0.0', 'end')  # delete all text",
      "${1:textbox}.configure(state='disabled')  # configure textbox to be read-only"
    ],
    "description": "Inserts a textbox widget snippet"
  },
  "CTkTextbox from the customtkinter module with grid placement": {
    "prefix": "ctktextbox.grid",
    "body": [
      "${1:textbox} = customtkinter.CTkTextbox(${2:app}, width=200, height=200)",
      "",
      "${1:textbox}.grid(column=0, row=0)",
      "",
      "${1:textbox}.insert('0.0', 'new text to insert')  # insert at line 0 character 0",
      "text = ${1:textbox}.get('0.0', 'end')  # get text from line 0 character 0 till the end",
      "${1:textbox}.delete('0.0', 'end')  # delete all text",
      "${1:textbox}.configure(state='disabled')  # configure textbox to be read-only"
    ],
    "description": "Inserts a textbox widget snippet"
  },
  "CTkTextbox from the customtkinter module with pack placement": {
    "prefix": "ctktextbox.pack",
    "body": [
      "${1:textbox} = customtkinter.CTkTextbox(${2:app}, width=200, height=200)",
      "",
      "${1:textbox}.pack()",
      "",
      "${1:textbox}.insert('0.0', 'new text to insert')  # insert at line 0 character 0",
      "text = ${1:textbox}.get('0.0', 'end')  # get text from line 0 character 0 till the end",
      "${1:textbox}.delete('0.0', 'end')  # delete all text",
      "${1:textbox}.configure(state='disabled')  # configure textbox to be read-only"
    ],
    "description": "Inserts a textbox widget snippet"
  },
  "CTkScrollbar from the customtkinter module": {
    "prefix": "ctkscrollbar",
    "body": [
      "${2:tk_textbox} = customtkinter.CTkTextbox(${3:app}, activate_scrollbars=False)",
      "${2:tk_textbox}.place(x=10, y=10)",
      "",
      "# create CTk scrollbar",
      "${1:ctk_textbox_scrollbar} = customtkinter.CTkScrollbar(${3:app}, command=${2:tk_textbox}.yview)",
      "${1:ctk_textbox_scrollbar}.place(x=10, y=10)",
      "",
      "# connect textbox scroll event to CTk scrollbar",
      "${2:tk_textbox}.configure(yscrollcommand=${1:ctk_textbox_scrollbar}.set)"
    ],
    "description": "Inserts a scrollbar widget snippet"
  },
  "CTkScrollbar from the customtkinter module with grid placement": {
    "prefix": "ctkscrollbar.grid",
    "body": [
      "${2:tk_textbox} = customtkinter.CTkTextbox(${3:app}, activate_scrollbars=False)",
      "${2:tk_textbox}.grid(row=0, column=0, sticky='nsew')",
      "",
      "# create CTk scrollbar",
      "${1:ctk_textbox_scrollbar} = customtkinter.CTkScrollbar(${3:app}, command=${2:tk_textbox}.yview)",
      "${1:ctk_textbox_scrollbar}.grid(row=0, column=1, sticky='ns')",
      "",
      "# connect textbox scroll event to CTk scrollbar",
      "${2:tk_textbox}.configure(yscrollcommand=${1:ctk_textbox_scrollbar}.set)"
    ],
    "description": "Inserts a scrollbar widget snippet"
  },
  "CTkScrollbar from the customtkinter module with pack placement": {
    "prefix": "ctkscrollbar.pack",
    "body": [
      "${2:tk_textbox} = customtkinter.CTkTextbox(${3:app}, activate_scrollbars=False)",
      "${2:tk_textbox}.pack()",
      "",
      "# create CTk scrollbar",
      "${1:ctk_textbox_scrollbar} = customtkinter.CTkScrollbar(${3:app}, command=${2:tk_textbox}.yview)",
      "${1:ctk_textbox_scrollbar}.pack()",
      "",
      "# connect textbox scroll event to CTk scrollbar",
      "${2:tk_textbox}.configure(yscrollcommand=${1:ctk_textbox_scrollbar}.set)"
    ],
    "description": "Inserts a scrollbar widget snippet"
  },
  "CTk from the customtkinter module": {
    "prefix": "ctkwindow",
    "body": [
      "import customtkinter",
      "",
      "${1:app} = customtkinter.CTk()",
      "${1:app}.geometry('600x500')",
      "${1:app}.title('CTk example')",
      "",
      "$0",
      "",
      "${1:app}.mainloop()"
    ],
    "description": "Creates a base CustomTkinter window"
  },
  "CTkImage from the customtkinter module": {
    "prefix": "ctkimage",
    "body": [
      "# add `from PIL import Image` on top",
      "${1:my_image} = customtkinter.CTkImage(light_image=Image.open('<path to light mode image>'),",
      "                                  dark_image=Image.open('<path to dark mode image>'),",
      "                                  size=(30, 30))"
    ],
    "description": "Image"
  },
  "CTkFont from the customtkinter module": {
    "prefix": "ctkfont",
    "body": [
      "${1:my_font} = customtkinter.CTkFont(family='<family name>', size=<size in px>)"
    ],
    "description": "Font"
  },
  "CTkToplevel from the customtkinter module": {
    "prefix": "ctktoplevel",
    "body": ["${1:toplevel} = customtkinter.CTkToplevel(${2:app}, width=200 ,height=200)  # master argument is optional  "],
    "description": "Inserts a top-level window widget snippet"
  },
  "CTkInputDialog from the customtkinter module": {
    "prefix": "ctkinputdialog",
    "body": [
      "${1:dialog} = customtkinter.CTkInputDialog(text='Type in a number:', title='Test')",
      "text = ${1:dialog}.get_input()",
      "",
      "${1:dialog}.place(x=10, y=10)"
    ],
    "description": "Inserts an input dialog widget snippet"
  },
  "CTkInputDialog from the customtkinter module with grid placement": {
    "prefix": "ctkinputdialog.grid",
    "body": [
      "${1:dialog} = customtkinter.CTkInputDialog(text='Type in a number:', title='Test')",
      "text = ${1:dialog}.get_input()",
      "",
      "${1:dialog}.grid(column=0, row=0)"
    ],
    "description": "Inserts an input dialog widget snippet"
  },
  "CTkInputDialog from the customtkinter module with pack placement": {
    "prefix": "ctkinputdialog.pack",
    "body": [
      "${1:dialog} = customtkinter.CTkInputDialog(text='Type in a number:', title='Test')",
      "text = ${1:dialog}.get_input()",
      "",
      "${1:dialog}.pack()"
    ],
    "description": "Inserts an input dialog widget snippet"
  },
  "TkinterVideo from the tkVideoPlayer module":{
    "prefix": "ctkvideo",
    "body": [
      "# add `from tkVideoPlayer import TkinterVideo` on top of code  ",
      "def button_function():",
      "    ${1:video_player}.play(r'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4') # replace url with media file link",
      ""
,     "${1:video_player} = TkinterVideo(${3:app}, scaled=True, width=1280, height=720)",
      "${1:video_player}.place(x=10 ,y=10)",
      "${1:video_player}.load('test.mp4')",
      "",
      "${2:button} = customtkinter.CTkButton(${3:app}, text='Play', command=button_function)",
      "${2:button}.place(x=10, y=10)"
    ]
  },
  "TkinterVideo from the tkVideoPlayer module with grid placement":{
    "prefix": "ctkvideo.grid",
    "body": [
      "# add `from tkVideoPlayer import TkinterVideo` on top of code  ",
      "def button_function():",
      "    ${1:video_player}.play(r'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4') # replace url with media file link",
      ""
,     "${1:video_player} = TkinterVideo(${3:app}, scaled=True, width=1280, height=720)",
      "${1:video_player}.grid(column=0, row=0)",
      "${1:video_player}.load('test.mp4')",
      "",
      "${2:button} = customtkinter.CTkButton(${3:app}, text='Play', command=button_function)",
      "${2:button}.grid(column=0, row=0)"
    ]
  },
  "TkinterVideo from the tkVideoPlayer module with pack placement":{
    "prefix": "ctkvideo.pack",
    "body": [
      "# add `from tkVideoPlayer import TkinterVideo` on top of code  ",
      "def button_function():",
      "    ${1:video_player}.play(r'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4') # replace url with media file link",
      ""
,     "${1:video_player} = TkinterVideo(${3:app}, scaled=True, width=1280, height=720)",
      "${1:video_player}.pack(expand=True, fill='both')",
      "${1:video_player}.load('test.mp4')",
      "",
      "${2:button} = customtkinter.CTkButton(${3:app}, text='Play', command=button_function)",
      "${2:button}.pack()"
    ]
  },
  "Appearance Mode from the customtkinter module": {
    "prefix": "appsys",
    "body": ["customtkinter.set_appearance_mode('system')"],
    "description": "Copy systems appearance"
  },
  "Appearance Mode Dark from the customtkinter module": {
    "prefix": "appdark",
    "body": ["customtkinter.set_appearance_mode('dark')"],
    "description": "Sets appearance to be dark"
  },
  "Appearance Mode Light from the customtkinter module": {
    "prefix": "applight",
    "body": ["customtkinter.set_appearance_mode('light')"],
    "description": "Sets appearance mode to be light"
  },
  "Theme Green from the customtkinter module": {
    "prefix": "themegreen",
    "body": ["customtkinter.set_default_color_theme('green')"],
    "description": "Sets the theme of the app to be green"
  },
  "Theme Blue from the customtkinter module": {
    "prefix": "themeblue",
    "body": ["customtkinter.set_default_color_theme('blue')"],
    "description": "Sets the theme of the app to be blue"
  },
  "Theme Dark Blue from the customtkinter module": {
    "prefix": "themedarkblue",
    "body": ["customtkinter.set_default_color_theme('dark-blue')"],
    "description": "Sets the theme of the app to be dark-blue"
  },
  "Theme Custom from the customtkinter module": {
    "prefix": "theme",
    "body": [
      "customtkinter.set_default_color_theme('${1:path/to/your/custom_theme.json}')"
    ],
    "description": "Sets custom theme for the app"
  },
  "Scaling Widget from the customtkinter module": {
    "prefix": "scalingwidget",
    "body": ["customtkinter.set_widget_scaling(${1})"],
    "description": "Sets the scale of the widgets with-in the app"
  },
  "Scaling Window from the customtkinter module": {
    "prefix": "scalingwindow",
    "body": ["customtkinter.set_window_scaling(${1})"],
    "description": "Sets the scale of the apps window"
  },
  "Deactivate DPI from the customtkinter module": {
    "prefix": "dpideactivate",
    "body": ["customtkinter.deactivate_automatic_dpi_awareness()"],
    "description": "Deactivates automatic scaling"
  }
}
